.popup {
	position: fixed;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	z-index: 100;

	background-color: oklch(0% 0 0 / 50%);

	overflow-y: auto;
	overflow-x: hidden;

	filter: opacity(0);
	visibility: hidden;

	transition:
		filter 0.8s,
		visibility 0.8s;
	&._open {
		filter: opacity(1);
		visibility: visible;
	}
	// .popup__body
	&__body {
		min-height: 100%;
		display: flex;
		justify-content: flex-end;
		align-items: center;

		padding-left: toRem(30);

		@media (max-width: toEm(599.98)) {
			&:has(.application) {
				padding-left: toRem(0);
			}
		}

		translate: 100% 0;
		transition: translate 0.8s;

		.popup._open & {
			translate: 0% 0;
		}
	}
}
.application {
	overflow-x: hidden;
	overflow-y: auto;

	position: relative;

	border-radius: toRem(15);
	background-color: $white;
	min-height: 100dvh;

	@include adaptiveValue(padding-top, 78, 16, $maxWidthContainer, 320);
	@include adaptiveValue(padding-right, 28, 10, $maxWidthContainer, 320);
	@include adaptiveValue(padding-left, 28, 16, $maxWidthContainer, 320);
	padding-bottom: toRem(32);

	@media (min-width: toEm(599.98)) {
		max-width: toRem(624);
		margin-left: auto;
		margin: 0;
	}
	@media (max-width: toEm(599.98)) {
		width: 100%;
	}

	margin-top: toRem(20);
	margin-bottom: toRem(20);

	overflow-y: auto;

	&__close-button {
		position: absolute;
		top: toRem(20);
		@include adaptiveValue(right, 20, 10, $maxWidthContainer, 320);
		min-height: toRem(30);

		@include adaptiveValue(width, 40, 25, $maxWidthContainer, 320);
		@include adaptiveValue(height, 40, 25, $maxWidthContainer, 320);

		@media (any-hover: hover) {
			&:hover {
				.fig {
					stroke: $green;
				}
			}
		}
		.fig {
			width: 100%;
			height: 100%;
			pointer-events: none;
			transition: stroke 0.3s;
			stroke: $color;
		}
	}

	// .application__title
	&__title {
		text-transform: uppercase;
		@include adaptiveValue(font-size, 48, 28, $maxWidthContainer, 320);
		font-family: $s;
		line-height: 256%;
		@media (max-width: toEm($pc)) {
			line-height: 120%;
			margin-bottom: toRem(30);
		}
		color: $dark;

		.credit & {
			@include adaptiveValue(margin-bottom, 16, 0, $maxWidthContainer, 320);
			@media (max-width: toEm($pc)) {
				@include adaptiveValueMod(padding-top, 30, 40, $pc, 320);
			}
		}
	}
}
.form-application {
	// .form-application__item
	&__item {
		margin-bottom: toRem(22);
	}
	// .form-application__label
	&__label {
		color: $color;
		line-height: 114%;
		letter-spacing: toRem(-0.14);
		margin-bottom: toRem(10);
	}
	// .form-application__input
	&__input {
		width: 100%;
		min-height: toRem(36);
		@include adaptiveValue(min-height, 46, 16, $maxWidthContainer, 320);
		padding-right: toRem(10);
		border-bottom: toRem(1) solid $dark;
		&::placeholder {
			font-size: toRem(25);
			@include adaptiveValue(font-size, 25, 18, $maxWidthContainer, 320);
			color: $dark;
			font-family: $s;
			line-height: 146%;
			transition: font-size 0.3s;
		}
		@include adaptiveValue(font-size, 25, 18, $maxWidthContainer, 320);
		color: $dark;
		font-family: $s;
		line-height: 146%;

		&:focus {
			&::placeholder {
				font-size: toRem(0);
			}
		}

		&._error {
			box-shadow: 0 0 toRem(15) red;
		}
	}
	// .form-application__spoller-button
	&__spoller-button {
		color: $green;
		font-size: toRem(12);
		font-weight: 600;
		line-height: 114%;
		letter-spacing: toRem(0.4);
		text-transform: uppercase;

		margin-bottom: toRem(26);

		position: relative;

		padding-right: toRem(8);

		&::before,
		&:after {
			content: "";
			display: block;
			width: toRem(8);
			height: toRem(1);
			background-color: $green;

			position: absolute;
			top: 50%;
			right: toRem(-8);
			translate: 0 -50%;

			transition: background-color 0.3s;
		}
		&::before {
			rotate: 90deg;
			transition: rotate 0.3s;
		}

		&._active {
			&::before {
				rotate: 0deg;
			}
		}

		@media (any-hover: hover) {
			transition: color 0.3s;
			&:hover {
				color: $dark;
				&::before,
				&::after {
					background-color: $dark;
				}
			}
		}
	}
	// .form-application__spoller-body
	&__spoller-body {
		margin-bottom: toRem(18);
	}
	// .form-application__textarea
	&__textarea {
		border-radius: toRem(15);
		border: 1px solid oklch(88.53% 0 0);
		padding: toRem(15);
		@include adaptiveValue(padding, 15, 10, $maxWidthContainer, 320);
		&::placeholder {
			color: $color;
			line-height: 114%;
			letter-spacing: toRem(-0.14);
			margin-bottom: toRem(10);
			font-size: toRem(14);

			transition: font-size 0.3s;
		}
		font-size: toRem(16);
		color: $dark;

		min-height: toRem(124);
		width: 100%;

		resize: none;

		margin-bottom: toRem(16);

		&:focus::placeholder {
			font-size: toRem(0);
		}
	}
}
.checks-block {
	position: relative;

	display: flex;
	column-gap: toRem(5);

	@include adaptiveValue(margin-bottom, 50, 32, $maxWidthContainer, 320);
	// .checks-block__item
	&__item {
		flex-basis: toRem(266);

		border-radius: toRem(15);
		border: toRem(1) solid oklch(88.53% 0 0);
		padding: toRem(16) toRem(12) toRem(18) toRem(18);
	}
	// .checks-block__top
	&__top {
		display: flex;
		align-items: center;
		justify-content: space-between;
		column-gap: toRem(20);

		margin-bottom: toRem(40);
	}
	// .checks-block__tultip
	&__tultip {
		cursor: pointer;
		display: inline-flex;
		justify-content: center;
		align-items: center;

		background-color: oklch(95.81% 0 0);

		width: toRem(22);
		height: toRem(22);
		border-radius: 50%;

		@media (any-hover: hover) {
			transition: color 0.3s;
			&:hover {
				color: $green;
				& + .tultip {
					visibility: visible;
					filter: opacity(1);
					translate: 0 0%;
				}
			}
		}
	}
	// .checks-block__text
	&__text {
		color: $color;
		max-width: toRem(84);
		font-size: toRem(12);
		line-height: 114%;
		letter-spacing: toRem(-0.14);
	}
}
.popup-label {
	// .popup-label__input
	&__input {
	}
	span {
		display: block;
		width: toRem(21);
		height: toRem(21);
		border-radius: toRem(4);
		border: toRem(1) solid $dark;

		background: url("@img/header/check.svg") center / toRem(12) toRem(9) no-repeat;

		@include setTransitionProperties(border, background-color);
	}
	&__input:checked + span {
		background-color: $green;
		border: toRem(1) solid $green;
	}
}
.tultip {
	border-radius: toRem(5);
	background-color: $white;
	box-shadow: 0 toRem(4) toRem(12) 0 oklch(0% 0 0 / 10%);

	padding: toRem(20) toRem(22) toRem(24) toRem(28);

	position: absolute;
	top: toRem(44);
	right: -20px;

	visibility: hidden;
	filter: opacity(0);
	translate: 0 10%;
	@include setTransitionProperties(translate, visibility, filter);

	max-width: toRem(355);
	width: 100%;

	// .tultip__title
	&__title {
		margin-bottom: toRem(16);
		color: $dark;
		line-height: 114%;
		letter-spacing: toRem(-0.14);
	}
	// .tultip__text
	&__text {
		color: $color;
		letter-spacing: toRem(-0.14);
		line-height: 150%;
	}
}
.dropdown {
	position: relative;
	&._active {
		.dropdown__list {
			filter: opacity(1);
			visibility: visible;
			translate: 0 0%;
		}
	}
	// .dropdown__button
	&__button {
		display: flex;
		align-items: center;
		justify-content: space-between;
		column-gap: toRem(20);

		width: 100%;

		@include adaptiveValue(font-size, 25, 18, $maxWidthContainer, 320);

		color: $dark;
		font-family: $s;
		line-height: 146%;

		border-bottom: toRem(1) solid $dark;

		span {
			pointer-events: none;
		}
	}
	&__icon {
		width: toRem(10);
		height: toRem(12);
		fill: $dark;

		pointer-events: none;
	}
	// .dropdown__list
	&__list {
		position: absolute;
		top: 90%;
		left: 0;
		width: 100%;
		height: toRem(170);
		z-index: 40;

		background-color: $white;
		border: toRem(1) solid $color;

		overflow-x: hidden;
		overflow-y: auto;

		filter: opacity(0);
		visibility: hidden;
		translate: 0 -10%;

		@include setTransitionProperties(translate, visibility, filter);

		&._active {
			filter: opacity(1);
			visibility: visible;
			translate: 0 0%;
		}
	}
	// .dropdown__list-item
	&__list-item {
		&:not(:last-child) {
			border-bottom: toRem(1) solid $color;
		}
	}
	// .dropdown__list-button
	&__list-button {
		padding: toRem(10);

		font-size: toRem(16);
		color: $dark;
		width: 100%;
		text-align: left;

		@media (any-hover: hover) {
			transition: box-shadow 0.3s;
			&:hover {
				box-shadow: 0 0 toRem(10) $color inset;
			}
		}
	}
	// .dropdown__input
	&__input {
		visibility: hidden;
	}
}
.file {
	// .file__input
	&__input {
		display: none;
	}
	// .file__button
	&__button {
		display: inline-flex;
		align-items: center;
		column-gap: toRem(10);

		color: $green;
		font-size: toRem(12);
		font-weight: 600;
		line-height: 114%;
		letter-spacing: toRem(0.4);
		text-transform: uppercase;

		@media (any-hover: hover) {
			transition: color 0.3s;
			&:hover {
				color: $dark;
				.file__icon {
					fill: $dark;
				}
			}
		}
	}
	// .file__icon
	&__icon {
		width: toRem(22);
		height: toRem(22);
		fill: $green;
		pointer-events: none;
		transition: fill 0.3s;
	}
	&__preview {
		margin-top: toRem(10);
		img {
			width: toRem(180);
			height: toRem(200);
		}
	}
}
.form-bottom {
	.credit & {
		display: flex;
		align-items: center;
		@include adaptiveValue(column-gap, 15, 12, $maxWidthContainer, 320);
		@include adaptiveValue(margin-bottom, 30, 20, $maxWidthContainer, 320);
	}
	.popup-label {
		margin-bottom: toRem(15);
		input._error + span {
			box-shadow: 0 0 toRem(15) red;
		}
	}
	// .form-bottom__text
	&__text {
		font-size: toRem(12);
		color: $color;
		line-height: 114%;
		letter-spacing: toRem(-0.14);
		a {
			font-weight: 600;
			text-decoration: underline;
			@media (any-hover: hover) {
				&:hover {
					text-decoration: none;
				}
			}
		}
		@include adaptiveValue(margin-bottom, 32, 14, $maxWidthContainer, 320);

		.credit & {
			flex-basis: toRem(346);
			margin: 0;
		}
	}
	// .form-bottom__button
	&__button {
		width: 100%;
		.credit & {
			width: toRem(284);
			@media (max-width: toEm(599.98)) {
				width: 100%;
			}
		}
	}
}

.credit {
	// .credit__close-button
	&__close-button {
		display: flex;
		align-items: center;
		@include adaptiveValue(column-gap, 15, 10, $maxWidthContainer, 320);
		position: absolute;
		@include adaptiveValue(top, 44, 20, $maxWidthContainer, 320);
		@include adaptiveValue(left, 40, 20, $maxWidthContainer, 320);

		font-size: toRem(12);
		font-weight: 600;

		line-height: 170%;
		text-transform: uppercase;
		letter-spacing: toRem(0.4);
		color: $green;

		svg {
			width: toRem(8);
			height: toRem(15);
			fill: $green;
			transition:
				fill 0.3s,
				translate 0.3s;

			rotate: 180deg;
		}
		@media (any-hover: hover) {
			transition: color 0.3s;
			&:hover {
				color: $dark;
				svg {
					fill: $dark;
					translate: toRem(-4) 0;
				}
			}
		}
	}
	// .credit__text
	&__text {
		line-height: 150%;
		letter-spacing: toRem(-0.14);
		@include adaptiveValue(margin-bottom, 16, 12, $maxWidthContainer, 320);
	}
	// .credit__link
	&__link {
		display: inline-block;

		color: $green;
		font-size: toRem(12);
		font-weight: 600;
		line-height: 114%;
		text-transform: uppercase;

		letter-spacing: toRem(0.4);
		@include adaptiveValue(margin-bottom, 24, 16, $maxWidthContainer, 320);

		@media (any-hover: hover) {
			transition: color 0.3s;
			&:hover {
				color: $dark;
			}
		}
	}
}
